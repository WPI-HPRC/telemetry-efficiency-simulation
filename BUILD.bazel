load("@protobuf//bazel:proto_library.bzl", "proto_library")

proto_library(
    name = "packet_proto",
    srcs = ["packet.proto"],
    deps = [],
)

cc_proto_library(
    name = "packet_cc_proto",
    deps = [":packet_proto"],
)

cc_library(
    name = "common_vars",
    hdrs = ["common_variables.h"],
    visibility = ["//visibility:public"],  # Make the library accessible to other targets
)

cc_library(
    name = "TX_headers",
    hdrs = ["Transmitter.h"],
    visibility = ["//visibility:public"],  # Make the library accessible to other targets
)

cc_binary(
  name = "TX",
  deps = [
    ":common_vars",
    #":TX_headers",
    ":packet_cc_proto",
    "@protobuf//:protobuf",
    "@abseil-cpp//absl/strings"
  ],
  srcs = ["Transmitter.cpp"],
)

cc_binary(
  name = "RX",
  deps = [
    ":common_vars",
    ":packet_cc_proto",
    "@protobuf//:protobuf",
    "@abseil-cpp//absl/strings"
  ],
  srcs = ["Receiver.cpp"],
)

cc_binary(
  name = "RandGen",
  deps = [
    ":common_vars",
    ":packet_cc_proto",
    "@protobuf//:protobuf",
    "@abseil-cpp//absl/strings"
  ],
  srcs = ["RandomBinaryGenerator.cpp"],
)

cc_binary(
  name = "all",
  deps = [
    ":common_vars",
    "TX",
    "RX",
    ":packet_cc_proto",
    "@protobuf//:protobuf",
    "@abseil-cpp//absl/strings"
  ],
)